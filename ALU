module ALU (a, b, Ainvert, Binvert, cin, operation, cout, result, set, overflow);
	input a, b, Ainvert, Binvert, cin, operation;
	output cout, result, set, overflow;
	
	wire notA, notB;
	assign notA = ~a;
	assign notB = ~b;
	wire muxAout;
	wire muxBout;
	
	Mux2to1 selectA(a, notA, Ainvert, muxAout);
	Mux2to1 selectB(b, notB, Binvert, muxBout);
	
	wire andOut, orOut; //outputs of AND and OR gates
	
	assign andOut = muxAout & muxBout;
	assign orOut = muxAout | muxBout;
	
	wire sout, cout; //sout is result output of adder and cout is carry out
	
	full_adder u1 (sout, cout, muxAout, muxBout, cin);
	
	wire xorOut;
	
	assign xorOut = muxAout ^ muxBout; //this differs from powerpoint diagram but was verbally specified by Head
	assign set = sout;
	
	Mux4to1 chooseResult (andOut, orOut, sout, xorOut, operation, result);

	//overflow detection:
	wire overflow;
	
	//what is this? assign overflow = 


	
endmodule
